name: Build, Test, and Release WinSatUi

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Set up MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Restore dependencies
      run: nuget restore WinSatUi.sln

    - name: Build
      run: msbuild WinSatUi.sln /p:Configuration=Release

    - name: Run tests
      run: |
        # Add your test runner command here if you have tests
        echo "No tests to run"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: WinSatUi/bin/Release/WinSatUi.exe  # Adjust this path if needed
        asset_name: WinSatUi.exe
        asset_content_type: application/octet-stream
