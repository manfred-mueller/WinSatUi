name: Build, Test, and Release WinSatUi

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Set up MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Restore dependencies
      run: nuget restore WinSatUi.sln

    - name: Build
      run: msbuild WinSatUi.sln /p:Configuration=Release

    - name: Run tests
      run: |
        # Add your test runner command here if you have tests
        echo "No tests to run"

    - name: Increment version number
      id: increment_version
      shell: pwsh
      run: |
        # Ensure VERSION.txt exists
        if (-Not (Test-Path "VERSION.txt")) {
          "0.0.0" > VERSION.txt
        }

        # Read the version from VERSION.txt
        $version = Get-Content -Path VERSION.txt

        # Increment the version number
        $versionParts = $version -split '\.'
        $versionParts[2] = [int]$versionParts[2] + 1
        $newVersion = "$($versionParts[0]).$($versionParts[1]).$($versionParts[2])"

        # Write the new version to VERSION.txt
        $newVersion > VERSION.txt

        # Set the new version as an output
        echo "::set-output name=new_version::$newVersion"

        # Commit the new version to the repository
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add VERSION.txt
        git commit -m "Increment version to $newVersion"
        git tag "v$newVersion"
        git push origin main --tags

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.increment_version.outputs.new_version }}
        release_name: Release ${{ steps.increment_version.outputs.new_version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: WinSatUi/bin/Release/WinSatUi.exe  # Adjust this path if needed
        asset_name: WinSatUi.exe
        asset_content_type: application/octet-stream
